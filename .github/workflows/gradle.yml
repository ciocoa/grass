name: Gradle

on:
  push:
    branches: [ "origin" ]
    tags: [ "v*.*.*" ]
  pull_request:
    branches: [ "origin" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  # This is used to complete the identity challenge
  # with sigstore/fulcio when running outside of PRs.
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    environment: build

    steps:
      - name: Checkout server
        uses: actions/checkout@v4
        with:
          ref: origin

      - name: Checkout plugin
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.PLUGIN_REPO }}
          path: ${{ vars.PLUGIN_PATH }}

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Download Handbook
        run: wget ${{ vars.HANDBOOK }} -P src/main/resources/html/

      - name: Execute Gradle build
        run: ./gradlew -PskipHandbook=1 && ./gradlew jar -PskipHandbook=1

      - name: Setup lib
        run: |
          cd ${{ vars.PLUGIN_PATH }}
          chmod +x gradlew
          mkdir lib
          cp ../*.jar lib

      - name: Build plugin
        run: |
          cd ${{ vars.PLUGIN_PATH }}
          ./gradlew jar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: |
            *.jar
            ${{ vars.PLUGIN_PATH }}/*.jar

  publish:
    runs-on: ubuntu-latest
    needs: build
    environment: publish

    steps:
      - name: Checkout dockerfile
        uses: actions/checkout@v4

      - name: Checkout resources
        run: wget -q ${{ vars.RESOURCES }} -O archive.zip

      - name: Download artifact
        uses: actions/download-artifact@v4

      - name: Install cosign
        if: github.event_name != 'pull_request' && github.event_name == 'push'
        uses: sigstore/cosign-installer@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}

      - name: Login to GitHub Packages
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ vars.IMAGE }}
            ${{ vars.REGISTRY }}/${{ github.repository }}
          tags: |
            type=ref,event=tag
            type=raw,value=nightly,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: github.event_name != 'pull_request' && github.event_name == 'push'
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
